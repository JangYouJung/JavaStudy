import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    static int N;
    static int[] tree;
    static int MAX;

    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(bf.readLine());
        tree = new int[ N*(N+1)/2 + 1 ];

        for( int i = 1; i < N*(N+1)/2 + 1; ){
            StringTokenizer line = new StringTokenizer(bf.readLine(), " ");
            while(line.hasMoreTokens()){
                tree[i] = Integer.parseInt(line.nextToken());
                i++;
            }
        }

        dfs( 1, 1, 0 );

        System.out.println(MAX);

    }// end of main

    public static void dfs( int index, int jump, int sum ){
        if( index > tree.length - 1 ){ // 리프 노드 도달
            MAX = Math.max(MAX, sum);
            return;
        }

        sum += tree[index];
        dfs( index + jump, jump + 1, sum );
        dfs( index + jump + 1, jump + 1, sum);
    }

}// end of class
